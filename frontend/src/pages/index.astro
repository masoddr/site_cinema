---
import SeancesViewer from '../components/SeancesViewer';
import Layout from '../layouts/Layout.astro';

// Récupérer les séances depuis l'API
let seances = [];
try {
  const response = await fetch('http://localhost:5000/api/seances', {
    headers: {
      'Accept': 'application/json'
    }
  });
  
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  
  const contentType = response.headers.get('content-type');
  if (!contentType || !contentType.includes('application/json')) {
    throw new TypeError("La réponse n'est pas du JSON!");
  }
  
  seances = await response.json();
  console.log('Séances récupérées:', seances);
  
} catch (error) {
  console.error('Erreur lors de la récupération des séances:', error);
  console.error('Message:', error.message);
}

// Normaliser les titres (tout en minuscules)
const normalizeTitle = (title) => title.toLowerCase().trim();

// Ajouter le titre normalisé à chaque séance
const seancesNormalized = seances.map(s => ({
  ...s,
  titreNormalise: normalizeTitle(s.titre)
}));

// Trier les séances
const sortedSeances = seancesNormalized.sort((a, b) => 
  new Date(a.jour) - new Date(b.jour) || 
  a.heure.localeCompare(b.heure)
);
---

<Layout title="Cinémas Toulouse">
  <main class="hero">
    <div class="hero-overlay">
      <div class="content-wrapper">
        <div class="hero-content">
          <h1 class="fade-in">
            Découvrez le cinéma
            <span class="accent">à Toulouse</span>
          </h1>
          <p class="subtitle fade-in-delay">
            Explorez toute la programmation des salles toulousaines en un seul endroit. Des blockbusters aux films d'auteur, trouvez votre prochaine séance.
          </p>
          <a href="/seances" class="cta-button fade-in-delay-2">
            <span>Voir les films</span>
            <svg class="arrow" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600&family=Inter:wght@300;400&display=swap');

.hero {
  height: 100vh;
  width: 100%;
  position: relative;
  background-image: url('/images/cinema-hero.jpg');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  overflow: hidden;
}

.hero-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    to right,
    rgba(0, 0, 0, 0.85) 0%,
    rgba(0, 0, 0, 0.6) 50%,
    rgba(0, 0, 0, 0.4) 100%
  );
  backdrop-filter: blur(1px);
}

.content-wrapper {
  height: 100%;
  max-width: 1440px;
  margin: 0 auto;
  padding: 0 5rem;
  display: flex;
  align-items: center;
}

.hero-content {
  width: 40%;
  min-width: 500px;
}

h1 {
  font-family: 'Playfair Display', serif;
  font-size: clamp(2.5rem, 4vw, 3.5rem);
  color: white;
  line-height: 1.2;
  margin-bottom: 1.5rem;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.accent {
  display: block;
  color: #E4D9FF;
  font-weight: 600;
}

.subtitle {
  font-family: 'Inter', sans-serif;
  font-size: clamp(1rem, 1.2vw, 1.2rem);
  color: rgba(255, 255, 255, 0.9);
  line-height: 1.8;
  margin-bottom: 2.5rem;
  font-weight: 300;
}

.cta-button {
  display: inline-flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem 2rem;
  color: white;
  text-decoration: none;
  font-family: 'Inter', sans-serif;
  font-size: 1.1rem;
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 4px;
  transition: all 0.3s ease;
  background: rgba(255, 255, 255, 0.1);
}

.cta-button:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
}

.arrow {
  width: 24px;
  height: 24px;
  transition: transform 0.3s ease;
}

.cta-button:hover .arrow {
  transform: translateX(5px);
}

/* Animations */
.fade-in {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeIn 0.8s ease forwards;
}

.fade-in-delay {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeIn 0.8s ease forwards 0.3s;
}

.fade-in-delay-2 {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeIn 0.8s ease forwards 0.6s;
}

@keyframes fadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive */
@media (max-width: 1024px) {
  .content-wrapper {
    padding: 0 3rem;
  }
  
  .hero-content {
    width: 60%;
    min-width: auto;
  }
}

@media (max-width: 768px) {
  .content-wrapper {
    padding: 0 1.5rem;
  }
  
  .hero-content {
    width: 100%;
    padding: 0 1rem;
  }
  
  h1 {
    font-size: 2.5rem;
  }
  
  .subtitle {
    font-size: 1rem;
  }
  
  .cta-button {
    width: calc(100% - 2rem);
    justify-content: center;
    padding: 0.875rem 1.5rem;
    font-size: 1rem;
    margin: 0 auto;
  }

  .arrow {
    width: 20px;
    height: 20px;
  }
}

@media (max-width: 360px) {
  .content-wrapper {
    padding: 0 1rem;
  }
  
  .hero-content {
    padding: 0 0.5rem;
  }
  
  .cta-button {
    padding: 0.75rem 1rem;
    font-size: 0.9rem;
  }
}
</style>

<script>
// Ajout d'un effet parallaxe au défilement
document.addEventListener('scroll', () => {
  const scrolled = window.pageYOffset;
  const landing = document.querySelector('.landing-page');
  if (landing) {
    landing.style.backgroundPositionY = `${scrolled * 0.5}px`;
  }
});

// Animation des éléments au scroll
const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  },
  { threshold: 0.1 }
);

document.querySelectorAll('.animate-on-scroll').forEach((el) => {
  observer.observe(el);
});
</script> 