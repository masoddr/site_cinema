---
import SeancesViewer from '../components/SeancesViewer';
import Layout from '../layouts/Layout.astro';

// Récupérer les séances depuis l'API
let seances = [];
try {
  const response = await fetch('http://localhost:5000/api/seances', {
    headers: {
      'Accept': 'application/json'
    }
  });
  
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  
  const contentType = response.headers.get('content-type');
  if (!contentType || !contentType.includes('application/json')) {
    throw new TypeError("La réponse n'est pas du JSON!");
  }
  
  seances = await response.json();
  console.log('Séances récupérées:', seances);
  
} catch (error) {
  console.error('Erreur lors de la récupération des séances:', error);
  console.error('Message:', error.message);
}

// Normaliser les titres (tout en minuscules)
const normalizeTitle = (title) => title.toLowerCase().trim();

// Ajouter le titre normalisé à chaque séance
const seancesNormalized = seances.map(s => ({
  ...s,
  titreNormalise: normalizeTitle(s.titre)
}));

// Trier les séances
const sortedSeances = seancesNormalized.sort((a, b) => 
  new Date(a.jour) - new Date(b.jour) || 
  a.heure.localeCompare(b.heure)
);
---

<Layout title="Cinémas Toulouse">
  <main class="landing-page">
    <div class="hero-overlay">
      <div class="hero-content">
        <h1 class="animate-title">
          <span class="text-gradient">Films</span>
          <br/>
          à Toulouse
        </h1>
        <p class="animate-text">Découvrez tous les films à l'affiche dans les cinémas toulousains</p>
        <div class="button-container">
          <a href="/seances" class="cta-button">
            Voir les séances
            <span class="arrow">→</span>
          </a>
          <div class="button-shadow"></div>
        </div>
      </div>
    </div>
    <div class="scroll-indicator">
      <span class="mouse">
        <span class="wheel"></span>
      </span>
      <p>Défiler pour découvrir</p>
    </div>
    </main>
</Layout>

<style>
.landing-page {
  min-height: 100vh;
  width: 100%;
  background-image: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.4),
    rgba(0, 0, 0, 0.6)
  ),
  url('/images/cinema-hero.jpg');
  background-size: cover;
  background-position: 50% 30%;
  background-repeat: no-repeat;
  position: relative;
  overflow: hidden;
}

.hero-overlay {
  min-height: 100vh;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 0 10%;
  position: relative;
}

.hero-content {
  max-width: 700px;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  text-align: left;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.hero-content h1 {
  font-size: 4.5rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
  line-height: 1.1;
}

.hero-content p {
  font-size: 1.8rem;
  margin-bottom: 2.5rem;
  font-weight: 300;
  line-height: 1.5;
}

.cta-button {
  display: inline-flex;
  align-items: center;
  gap: 0.8rem;
  background-color: white;
  color: #1a1a1a;
  padding: 1rem 2.5rem;
  border-radius: 50px;
  text-decoration: none;
  font-size: 1.2rem;
  font-weight: 500;
  transition: all 0.4s ease;
  border: 2px solid white;
  position: relative;
  overflow: hidden;
}

.cta-button:hover {
  background-color: transparent;
  color: white;
  transform: translateY(-2px);
}

.arrow {
  transition: transform 0.3s ease;
}

.cta-button:hover .arrow {
  transform: translateX(5px);
}

.cta-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: all 0.6s ease;
}

.cta-button:hover::before {
  left: 100%;
}

.text-gradient {
  background: linear-gradient(45deg, #FF3366, #FF9933);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 200% 200%;
  animation: gradient 8s ease infinite;
}

.animate-title {
  opacity: 0;
  transform: translateY(30px);
  animation: fadeInUp 0.8s ease forwards;
}

.animate-text {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.8s ease forwards 0.3s;
}

.button-container {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.8s ease forwards 0.6s;
  position: relative;
  display: inline-block;
  align-self: flex-start;
}

.button-shadow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50px;
  background: rgba(255, 255, 255, 0.2);
  filter: blur(20px);
  z-index: -1;
  opacity: 0;
  transition: all 0.3s ease;
}

.cta-button:hover + .button-shadow {
  opacity: 1;
  transform: translateY(5px) scale(1.1);
}

.scroll-indicator {
  position: absolute;
  bottom: 40px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  opacity: 0;
  animation: fadeIn 0.8s ease forwards 1s;
}

.mouse {
  width: 30px;
  height: 50px;
  border: 2px solid white;
  border-radius: 20px;
  display: flex;
  justify-content: center;
  padding-top: 10px;
}

.wheel {
  width: 4px;
  height: 8px;
  background: white;
  border-radius: 2px;
  animation: scroll 1.5s ease infinite;
}

.scroll-indicator p {
  color: white;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  opacity: 0.8;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scroll {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  50% {
    transform: translateY(10px);
    opacity: 0.5;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes subtleZoom {
  0%, 100% {
    background-size: 100% 100%;
  }
  50% {
    background-size: 110% 110%;
  }
}

/* Améliorations responsive */
@media (max-width: 1200px) {
  .hero-content h1 {
    font-size: 4rem;
  }

  .hero-content p {
    font-size: 1.6rem;
  }
}

@media (max-width: 768px) {
  body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
  }

  .landing-page {
    width: 100vw;
    min-height: 100vh;
    height: 100%;
    background-attachment: scroll;
    background-position: 50% 20%;
    margin: 0;
    padding: 0;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 2rem 5%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero-content {
    max-width: 100%;
    width: 100%;
    padding: 0 1rem;
  }

  .hero-content h1 {
    font-size: 3.2rem;
  }

  .hero-content p {
    font-size: 1.3rem;
    margin-bottom: 2rem;
  }

  .cta-button {
    padding: 0.9rem 2rem;
    font-size: 1.1rem;
    width: 100%;
    justify-content: center;
  }

  .button-container {
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
  }

  .scroll-indicator {
    bottom: 20px;
  }
}

@media (max-width: 480px) {
  .hero-content h1 {
    font-size: 2.5rem;
  }

  .hero-content p {
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
  }

  .cta-button {
    padding: 0.8rem 1.8rem;
    font-size: 1rem;
  }
}

/* Ajustements pour les appareils en mode paysage */
@media (max-height: 600px) and (orientation: landscape) {
  .landing-page {
    height: auto;
    min-height: 100vh;
  }

  .hero-overlay {
    padding: 3rem 5%;
    min-height: 100vh;
  }

  .hero-content h1 {
    font-size: 2.8rem;
    margin-bottom: 0.8rem;
  }

  .hero-content p {
    font-size: 1.1rem;
    margin-bottom: 1.2rem;
  }

  .cta-button {
    padding: 0.7rem 1.8rem;
    font-size: 1rem;
  }

  .scroll-indicator {
    display: none;
  }
}

/* Ajustements pour les très petits écrans */
@media (max-width: 320px) {
  .hero-content h1 {
    font-size: 2.2rem;
  }

  .hero-content p {
    font-size: 1rem;
  }

  .cta-button {
    padding: 0.7rem 1.5rem;
    font-size: 0.9rem;
  }
}

/* Ajustements pour les grands écrans */
@media (min-width: 1600px) {
  .hero-content {
    max-width: 800px;
  }

  .hero-content h1 {
    font-size: 5rem;
  }

  .hero-content p {
    font-size: 2rem;
  }

  .cta-button {
    padding: 1.2rem 3rem;
    font-size: 1.4rem;
  }
}

/* Ajustements pour éviter les problèmes sur les appareils iOS */
@supports (-webkit-touch-callout: none) {
  .landing-page {
    height: -webkit-fill-available;
    position: relative;
  }

  .hero-overlay {
    height: -webkit-fill-available;
  }
}

/* Ajustement pour les appareils en mode portrait */
@media (orientation: portrait) {
  .landing-page {
    background-position: 50% 25%;
  }
}

/* Ajustement pour les appareils en mode paysage */
@media (orientation: landscape) {
  .landing-page {
    position: relative;
  }
}

/* Ajustement pour les très grands écrans */
@media (min-width: 1600px) {
  .landing-page {
    background-position: 50% 40%;
  }
}

/* Ajustement pour les petits écrans en hauteur */
@media (max-height: 600px) {
  .landing-page {
    background-position: 50% 30%;
  }
}
</style>

<script>
// Ajout d'un effet parallaxe au défilement
document.addEventListener('scroll', () => {
  const scrolled = window.pageYOffset;
  const landing = document.querySelector('.landing-page');
  if (landing) {
    landing.style.backgroundPositionY = `${scrolled * 0.5}px`;
  }
});

// Animation des éléments au scroll
const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  },
  { threshold: 0.1 }
);

document.querySelectorAll('.animate-on-scroll').forEach((el) => {
  observer.observe(el);
});
</script> 